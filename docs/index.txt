===============================================
Bathymetric CAE Documentation
===============================================

.. image:: https://img.shields.io/badge/License-MIT-yellow.svg
   :target: https://opensource.org/licenses/MIT
   :alt: License: MIT

.. image:: https://img.shields.io/badge/python-3.8+-blue.svg
   :target: https://www.python.org/downloads/
   :alt: Python 3.8+

.. image:: https://img.shields.io/badge/TensorFlow-2.13+-orange.svg
   :target: https://tensorflow.org/
   :alt: TensorFlow 2.13+

Welcome to Bathymetric CAE
===========================

Bathymetric CAE is a comprehensive pipeline for processing bathymetric data using advanced Convolutional Autoencoders with modern machine learning techniques. The package provides state-of-the-art neural network architectures specifically designed for bathymetric data cleaning, enhancement, and uncertainty quantification.

Key Features
============

🚀 **Advanced Neural Architecture**
   - Residual blocks with skip connections for improved gradient flow
   - Spatial attention mechanisms for feature enhancement
   - Multi-channel input support (depth + uncertainty)
   - Combined loss functions (MSE + SSIM) for optimal results

🗺️ **Comprehensive Data Support**
   - BAG (Bathymetric Attributed Grid) files with native uncertainty support
   - GeoTIFF, ASCII Grid, and XYZ point cloud formats
   - Automatic geospatial metadata preservation
   - Robust data validation and cleaning

⚡ **Performance Optimization**
   - Mixed precision training for modern GPUs
   - Intelligent memory management and monitoring
   - Parallel processing capabilities
   - Automatic GPU detection and optimization

📊 **Rich Visualization & Analysis**
   - Interactive training progress monitoring
   - Comprehensive comparison plots (original vs. processed)
   - Statistical analysis and quality metrics
   - Automated report generation

🔧 **Flexible Configuration**
   - JSON-based configuration with validation
   - Command-line interface with extensive options
   - Programmatic API for custom workflows
   - Multiple architecture presets for different use cases

Quick Start
===========

Installation
------------

Install from PyPI::

    pip install bathymetric-cae

Or with GPU support::

    pip install bathymetric-cae[gpu]

Basic Usage
-----------

Command Line Interface::

    # Basic processing
    bathymetric-cae --input /path/to/input --output /path/to/output

    # Custom configuration
    bathymetric-cae --config my_config.json --epochs 200

    # Single file processing
    bathymetric-cae --single-file input.bag --model trained_model.h5

Python API::

    from bathymetric_cae import BathymetricCAEPipeline, Config

    # Create configuration
    config = Config(
        input_folder="./input_data",
        output_folder="./output_data",
        epochs=100,
        batch_size=8
    )

    # Run pipeline
    pipeline = BathymetricCAEPipeline(config)
    results = pipeline.run(
        input_folder=config.input_folder,
        output_folder=config.output_folder,
        model_path="bathymetric_model.h5"
    )

Supported Data Formats
=======================

.. list-table::
   :header-rows: 1
   :widths: 20 15 40 25

   * - Format
     - Extension
     - Description
     - Uncertainty Support
   * - BAG
     - .bag
     - Bathymetric Attributed Grid
     - ✅ Native support
   * - GeoTIFF
     - .tif, .tiff
     - Tagged Image File Format
     - ❌ Single band only
   * - ASCII Grid
     - .asc
     - ESRI ASCII Grid format
     - ❌ Single band only
   * - XYZ
     - .xyz
     - Point cloud format
     - ❌ Single band only

Documentation Contents
=======================

.. toctree::
   :maxdepth: 2
   :caption: Getting Started

   installation
   quickstart
   examples

.. toctree::
   :maxdepth: 2
   :caption: User Guide

   configuration
   data_formats
   model_architectures
   training_strategies
   visualization
   performance_optimization

.. toctree::
   :maxdepth: 2
   :caption: API Reference

   api/config
   api/core
   api/utils
   api/visualization
   api/cli

.. toctree::
   :maxdepth: 2
   :caption: Advanced Topics

   advanced/custom_architectures
   advanced/transfer_learning
   advanced/ensemble_methods
   advanced/deployment
   advanced/troubleshooting

.. toctree::
   :maxdepth: 1
   :caption: Development

   contributing
   testing
   changelog
   roadmap

Architecture Overview
=====================

The Bathymetric CAE package is built around a modular architecture that separates concerns and enables easy customization:

.. code-block:: text

    ┌─────────────────────────────────────────────────────┐
    │                CLI Interface                        │
    │            (Command Line Tools)                     │
    └─────────────────────┬───────────────────────────────┘
                          │
    ┌─────────────────────▼───────────────────────────────┐
    │              Pipeline Orchestrator                  │
    │        (Workflow Management & Coordination)         │
    └─────────┬─────────────────────────┬─────────────────┘
              │                         │
    ┌─────────▼────────┐    ┌───────────▼──────────┐
    │ Data Processor   │    │   Model Builder      │
    │ • File Loading   │    │ • Architecture       │
    │ • Validation     │    │ • Training           │
    │ • Preprocessing  │    │ • Inference          │
    │ • Normalization  │    │ • Callbacks          │
    └─────────┬────────┘    └───────────┬──────────┘
              │                         │
    ┌─────────▼─────────────────────────▼──────────┐
    │              Utilities Layer                 │
    │ • Memory Management  • GPU Optimization      │
    │ • Logging System     • File Operations       │
    │ • Visualization      • Configuration         │
    └──────────────────────────────────────────────┘

Core Components
===============

**Configuration Management**
   Type-safe configuration with validation, JSON serialization, and flexible parameter handling.

**Data Processing Pipeline**
   Robust bathymetric data loading, validation, cleaning, and preprocessing with support for multiple formats.

**Advanced Model Architecture**
   State-of-the-art convolutional autoencoder with residual connections, attention mechanisms, and uncertainty handling.

**Visualization Suite**
   Comprehensive plotting and analysis tools for training monitoring, data comparison, and result analysis.

**Performance Optimization**
   Memory management, GPU utilization, parallel processing, and deployment optimization tools.

Use Cases
=========

**Research Applications**
   - Bathymetric data quality assessment and improvement
   - Uncertainty quantification and propagation analysis
   - Comparative studies of processing techniques
   - Algorithm development and validation

**Production Workflows**
   - Large-scale bathymetric data processing
   - Automated quality control pipelines
   - Real-time data cleaning and enhancement
   - Integration with existing GIS workflows

**Educational Purposes**
   - Learning modern deep learning techniques
   - Understanding bathymetric data characteristics
   - Exploring neural network architectures
   - Hands-on machine learning experience

Performance Characteristics
===========================

The package is designed for efficiency and scalability:

.. list-table:: Performance Metrics
   :header-rows: 1
   :widths: 30 35 35

   * - Metric
     - Typical Performance
     - Optimization Notes
   * - Training Speed
     - 2-5 min/epoch (512x512)
     - GPU acceleration recommended
   * - Inference Speed
     - 50-200 files/hour
     - Depends on file size and hardware
   * - Memory Usage
     - 2-8 GB RAM
     - Scales with batch size and resolution
   * - Model Size
     - 10-100 MB
     - Varies with architecture complexity
   * - Quality Improvement
     - 15-40% SSIM increase
     - Depends on input data quality

System Requirements
===================

**Minimum Requirements**
   - Python 3.8 or higher
   - 4 GB RAM
   - 2 GB available disk space
   - GDAL 3.4 or higher

**Recommended Requirements**
   - Python 3.9 or higher
   - 16 GB RAM
   - NVIDIA GPU with 6+ GB VRAM
   - 10 GB available disk space
   - CUDA 11.2 or higher

**Supported Platforms**
   - Linux (Ubuntu 18.04+, CentOS 7+)
   - macOS (10.15+)
   - Windows 10/11

Community and Support
=====================

**Getting Help**
   - 📖 Read the comprehensive documentation
   - 💬 Join our community discussions
   - 🐛 Report issues on GitHub
   - 📧 Contact the development team

**Contributing**
   - 🔀 Submit pull requests
   - 📝 Improve documentation
   - 🧪 Add test cases
   - 💡 Suggest new features

**Citation**
   If you use Bathymetric CAE in your research, please cite::

       @software{bathymetric_cae,
         title={Bathymetric CAE: Advanced Convolutional Autoencoder for Bathymetric Data Processing},
         author={Bathymetric CAE Team},
         url={https://github.com/noaa-ocs-hydrography/bathymetric-cae},
         version={1.0.0},
         year={2024}
       }

License and Acknowledgments
===========================

Bathymetric CAE is released under the MIT License, allowing for both academic and commercial use.

**Acknowledgments**
   - TensorFlow team for the deep learning framework
   - GDAL community for geospatial data processing capabilities
   - Scientific Python community for the excellent ecosystem
   - Contributors and users who help improve the package

Changelog
=========

**Version 1.0.0** (Current)
   - Initial release with complete feature set
   - Advanced CAE architecture with attention mechanisms
   - Multi-format data support (BAG, GeoTIFF, ASCII, XYZ)
   - Comprehensive visualization and analysis tools
   - GPU optimization and mixed precision training
   - Extensive documentation and examples

**Upcoming Features**
   - Real-time processing capabilities
   - Advanced uncertainty quantification methods
   - Integration with cloud processing platforms
   - Enhanced visualization and interactive tools
   - Additional model architectures and presets

Indices and Tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`

.. note::
   This documentation is continuously updated. For the latest information,
   visit the `official repository <https://github.com/noaa-ocs-hydrography/bathymetric-cae>`_.

.. tip::
   New to bathymetric data processing? Start with the :doc:`quickstart` guide
   and explore the :doc:`examples` to get hands-on experience with the package.